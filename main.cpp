#include <iostream>

#include <stdio.h>

//#include "stdafx.h"
#include "matrix.h"
#include <iostream>
#include <fstream>
#include <stdlib.h>

//#include "Matrix3.h"
using namespace std;

void PrintChoise() //Функкция вывода выбора действий с матрицами
{
    cout << "1. Сложить матрицы A и B " << endl;
    cout << "2. Умножить матрицу А на B" << endl;
    cout << "3. Умножить матрицу B на А " << endl;
}


void PrintChoise2() //Функция выбора метода заполнения элементов матрицы
{
    cout << "1. Ввести с клавиатуры " << endl;
    cout << "2. Заполнить рандомными числами " << endl;
    cout << "3. Ввести с файла " << endl;
}

int main()
{
    int t, n1, n2, m1, m2, k, a, i, j;
    a = 0;
    n1 = 0;
    fstream F; //организуем работу с файлами
    setlocale(LC_ALL, "Russian");
    cout << "Добрый день! Для начала завести матрицы A и B." << endl;
    cout << "Введите количество строк в матрице А : "; cin >> n1; cout << endl;
    cout << "Введите количество столбцов в матрице A : "; cin >> m1; cout << endl;
    QSMatrix<int> A(n1, m1, 0); // Заводим матрицу А с введенным количеством строк и столбцов
    cout << "Введите количество строк в матрице B : "; cin >> n2; cout << endl;
    cout << "Введите количество столбцов в матрице B : "; cin >> m2; cout << endl;
    QSMatrix<int> B(n2, m2, 0); // Заводим матрицу В с введенным количеством строк и столбцов
    cout << "Как вы хотите заполнить матрицы? " << endl;
    PrintChoise2(); //Выбираем способ заполнения матрицы
    cin >> t; // считываем номер операции
    if (t == 1) { //заполнение матриц с клавиатуры
        cout << "Введите элементы матрицы А " << endl;
        cin >> A;
        cout << "Введите элементы матрицы В " << endl;
        cin >> B;
    }
    else {
        if (t == 2) {//заполнение матриц рандомными двузначными числами
            cout << "Заполняем матрицу A " << endl;
            A = A.RandomSet();
            cout << A;
            cout << "Заполняем матрицу B " << endl;
            B = B.RandomSet();
            cout << B;
        }
        else
        {
            if (t == 3) {//заполнение матриц чтением с файла
                F.open("G:/Check/A.txt"); //открываем файл с матрицей А
                for (int i = 0; i < n1; i++)
                {
                    for (int j = 0; j < m1; j++)
                    {
                        int a;
                        F >> a;
                        A(i, j) = a; //Заполняем элементы матрицы А
                    }
                }
                F.close(); //Закрыли файл
                F.open("G:/Check/B.txt"); //открываем файл с матрицей В
                for (int i = 0; i < n2; i++)
                {
                    for (int j = 0; j < m2; j++)
                    {
                        F >> a;
                        B(i, j) = a; //Заполняем элементы матрицы В
                    }
                }
                F.close(); //Закрыли файл
            }
            else
            {
                cout << "Неправильный номер операции!!!!" << endl; //Если номер операции введен неправильно - выводим сообщение об ошибке
            }
        }

    }
    cout << "Что хотите сделать с матрицами? " << endl;
    PrintChoise(); //предлагаем выбрать действие с матрицами
    cin >> t;

    if (t == 1) {//Складываем матрицы, при условии, что их складывать можно
        if (A.get_rows() == B.get_rows() && B.get_cols() == B.get_cols())
        {
            QSMatrix<int> C = A + B;
            cout << C; //вывели результат (итоговую матрицу)
            ofstream fout;
            fout.open("G:/Check/C.txt"); //записываем в файл С.txt
            fout << C;
            fout.close();
        }
        else
        {
            cout << "Складывать матрицы разных размерностей нельзя!!!!";
        }
    }
    else {
        if (t == 2) {//перемножаем матрицы, при условии, что их перемножать можно
            if (n1 != m2) { cout << "Умножение матриц невозможно по правилам!!!" << endl; }
            else {
                QSMatrix<int> C = A*B;
                cout << C; //вывели результат (итоговую матрицу)
                ofstream fout;
                fout.open("G:/Check/C.txt"); //записываем в файл С.txt
                fout << C;
                fout.close();
            }
        }
        else
        {
            if (t==3){ //перемножаем матрицы, при условии, что их перемножать можно
                if (n2 != m1) { cout << "Умножение матриц невозможнопо по правилам!!!" << endl; }
                else {
                    QSMatrix<int> C = B*A;
                    cout << C; //вывели результат (итоговую матрицу)
                    ofstream fout;
                    fout.open("G:/Check/C.txt"); //записываем в файл С.txt
                    fout << C;
                    fout.close();
                }
            }
            else {
                cout << "Неправильный номер операции!!!!" << endl; //Если номер операции введен неправильно - выводим сообщение об ошибке
            }
        }
    }
    return 0;
}
